---
# This playbook installs and configures spotify-tui and spotifyd for a headless spotify setup

- name: Get latest release of a spotifyd
  github_release:
    user: Spotifyd
    repo: spotifyd
    action: latest_release
  register: latest_version

- name: "Download spotifyd {{ latest_version.tag }} tarball"
  get_url:
    url: "https://github.com/Spotifyd/spotifyd/releases/download/{{ latest_version.tag }}/spotifyd-linux-full.tar.gz"
    dest: "{{ downloads }}/spotifyd-linux-full.tar.gz"

- name: Unpack spotifyd tarball
  unarchive:
    src: "{{ downloads }}/spotifyd-linux-full.tar.gz"
    dest: "{{ downloads }}"
    copy: false

- name: Check if spotifyd service exists
  stat:
    path: "{{ systemd.config_path }}/spotifyd.service"
  register: checked

- name: Stop spotifyd service if it exists
  when: checked.stat.exists
  become: true
  environment:
    XDG_RUNTIME_DIR: "{{ host.xdg }}"
  systemd:
    name: spotifyd
    state: stopped

- name: "Make sure spotifyd sub-dir exists in {{ systemd.bin_path }}"
  file:
    path: "{{ systemd.bin_path }}/spotifyd"
    owner: "root"
    group: "root"
    state: directory
    mode: '0755'
  become: true

- name: Make sure spotifyd config dir exists
  file:
    path: "{{ user.home }}/.config/spotifyd"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    state: directory
    mode: '0755'

- name: Check if spotifyd config exists
  stat:
    path: "{{ spotifyd.config }}"
  register: config

- name: Install spotifyd config file
  when: config.stat.exists == False
  template:
    src: spotifyd.conf.j2
    dest: "{{ spotifyd.config }}"
    mode: 0755
    owner: "{{ user.name }}"
    group: "{{ user.name }}"

# Spt directory [in ~/snap] will not exist unless it is ran, so we will create it
- name: Check if spotify-tui client config directory exists
  stat:
    path: "{{ spt.config_dir }}"
  register: spt_dir

- name: Create spotify-tui config directory if it doesnt exist
  when: spt_dir.stat.exists == False
  file:
    path: "{{ spt.config_dir }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    state: directory
    mode: '0755'
  become: true

- name: Install spotify-tui client config
  when: spt_dir.stat.exists == False
  template:
    src: client.yml.j2
    dest: "{{ spt.config_dir }}/client.yml"
    mode: 0755
    owner: "{{ user.name }}"
    group: "{{ user.name }}"

- name: Copy spotifyd binary to {{ systemd.bin_path }}/spotifyd
  command: "cp {{ downloads}}/spotifyd {{ systemd.bin_path }}/spotifyd"
  become: yes

- name: Set permissions on spotifyd binary
  file:
    path: "{{ systemd.bin_path }}/spotifyd"
    owner: "root"
    group: "root"
    mode: 0755
  become: yes

- name: Create spotifyd systemd unit
  template:
    src: spotifyd.service.j2
    dest: "{{ systemd.config_path }}/spotifyd.service"
  become: yes

- name: Start spotifyd service
  become: true
  environment:
    XDG_RUNTIME_DIR: "{{ host.xdg }}"
  systemd:
    name: spotifyd
    daemon_reload: true
    state: started
    enabled: true
