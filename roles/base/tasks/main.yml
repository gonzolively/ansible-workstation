---

- name: Detect if GUI exists
  shell: "echo $XDG_CURRENT_DESKTOP"
  register: gui
  ignore_errors: yes

- name: Set GUI variable
  set_fact:
    has_gui: "{{ gui.stdout }}"

# Run distro specific package tasks before installing running base
- include_tasks: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- include_tasks: fedora.yml
  when: ansible_distribution == "Fedora"

- include_tasks: arch.yml
  when: ansible_distribution == "Archlinux"

- name: Set the hostname
  hostname:
    name: "{{ host.hostname }}"

- name: Create download directory for various utils
  file:
    state: directory
    path: "{{ downloads }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"

- name: Installing python (Ubuntu)
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - python2.7
    - python-pip
    - python3
    - python3-pip
  when: ansible_distribution == "Ubuntu"

- name: Installing python (Fedora)
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - python
    - python-pip
    - python-devel
    - python3
    - python3-pip
    - python3-devel
  when: ansible_distribution == "Fedora"

- name: Installing python (Arch)
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - python2
    - python2-pip
    - python
    - python-pip
  when: ansible_distribution == "Archlinux"

- name: Update pip packages - Ubuntu/Fedora
  shell: |
    pip2 install -U pip && pip3 install -U pip
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Fedora'

- name: Update pip packages - Archlinux
  shell: |
    pip install --upgrade pip && pip3 install -U pip
  when: ansible_distribution == "Archlinux"

- name: Install pip dependencies
  pip:
    name: 
    - github3.py

# Install user programs and packages
- include_tasks: packages.yml
